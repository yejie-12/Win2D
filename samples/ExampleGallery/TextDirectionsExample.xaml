<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<UserControl
    x:Class="ExampleGallery.TextDirectionsExample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ExampleGallery"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="437"
    d:DesignWidth="872"
    d:DataContext="{d:DesignInstance local:TextDirectionsExample, IsDesignTimeCreatable=True}"
    Unloaded="UserControl_Unloaded">

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
               

            <StackPanel Grid.Row="0">
                <TextBlock FontSize="14" TextWrapping="Wrap" MaxWidth="400" HorizontalAlignment="Left" Margin="10">
                    Win2D specifies text alignment and directions similarly to how XAML specifies them.
                    This example demonstrates how text alignment is affected by text direction.
                </TextBlock>
                <ComboBox x:Name="directionsCombo" HorizontalAlignment="Left" Margin="10" ItemsSource="{Binding Directions}" SelectedIndex="{Binding CurrentDirectionIndex, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <local:TextDirectionControl TextDirection="{Binding Direction}" Width="32" Height="32" Margin="16"                                                             
                                                            Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                      
            </StackPanel>

            <Border Grid.Row="1" BorderThickness="2" BorderBrush="Yellow" Margin="10"/>
            <Grid Grid.Row="1" Margin="20" MinHeight="64">
                <TextBlock TextAlignment="Left" FlowDirection="{Binding XamlFlowDirection}" VerticalAlignment="Center" FontSize="24">Left<LineBreak/>Aligned</TextBlock>
                <TextBlock TextAlignment="Right" FlowDirection="{Binding XamlFlowDirection}" VerticalAlignment="Center" FontSize="24">Right<LineBreak/>Aligned</TextBlock>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="400" FontSize="14">XAML TextBlock</TextBlock>
                <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Visibility="{Binding UnsupportedVisibility}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" TextWrapping="Wrap">
                        TextBlock only supports CanvasTextDirections LeftToRightThenTopToBottom and RightToLeftThenTopToBottom.  These are specified in XAML with FlowDirections LeftToRight and RightToLeft.
                    </TextBlock>
                </Grid>            
            </Grid>

            <Border Grid.Row="2" BorderThickness="2" BorderBrush="Yellow" Margin="10" />
            <canvas:CanvasControl x:Name="canvas" Grid.Row="2" Margin="20" MinHeight="256" Draw="canvas_Draw" />

        </Grid>
    </ScrollViewer>
</UserControl>
